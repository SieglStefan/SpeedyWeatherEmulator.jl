var documenterSearchIndex = {"docs":
[{"location":"#SpeedyWeatherEmulator","page":"Home","title":"SpeedyWeatherEmulator","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for SpeedyWeatherEmulator.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#SpeedyWeatherEmulator.BasicStructs.SimPara","page":"Home","title":"SpeedyWeatherEmulator.BasicStructs.SimPara","text":"SimPara(trunc::Int, \n        n_steps::Int, \n        n_ic::Int, \n        n_spinup::Int, \n        t_step::Real, \n        initial_cond::Union{Nothing, Function}, \n        id_key::String)\n\nContainer for basic simulation parameters for SpeedyWeather.jl simulation data generation and data shape, see constructor for details.\n\n\n\n\n\n","category":"type"},{"location":"#SpeedyWeatherEmulator.BasicStructs.SimPara-Tuple{}","page":"Home","title":"SpeedyWeatherEmulator.BasicStructs.SimPara","text":"SimPara(;   trunc::Int, \n            n_steps::Int, \n            n_ic::Int, \n            n_spinup::Int = 10, \n            t_step::Real = 1.0, \n            initial_cond::Union{Nothing, Function} = nothing, \n            id_key::String = \"\")\n\nConvenience Constructor for SimPara\n\nFields\n\ntrunc::Int: Spectral truncation of the barotropic model (e.g. 5 for T5).\nn_steps::Int: Number of data points after the spin-up time, with the first at t = t_spinup.\nn_ic::Int: Number of simulated initial conditions.\nn_spinup::Int = 10: Time after data is stored in SimData\nt_step::Real = 1.0: Time step length.\ninitial_cond::Union{Nothing, Function} = nothing: Specific initial condition, if empty: random initial conditions are applied.\nid_key::String = \"\": Key for accessing saved simulation data.   Data is saved with the parameters trunc, nsteps and nic. Key is for further differentiation of simulation data.\n\nExamples\n\n```julia simpara = SimPara(trunc=5, nsteps=8, nic=1000, storagekey=\"test\")\n\n\n\n\n\n","category":"method"},{"location":"#SpeedyWeatherEmulator.SimDataHandling.SimData","page":"Home","title":"SpeedyWeatherEmulator.SimDataHandling.SimData","text":"SimData(sim_para::SimPara, \n        data::Array{Float32,3})\n\nContainer for SpeedyWeather.jl simulation data and corresponding simulation parameter, see constructor for details.\n\nFields\n\nsim_para::SimPara: Simulation parameters for data generation.\ndata::Array{Float32,3}: Data storage, where data = (ncoeff) x `nstepsxnic`, where   (ncoeff) is the number of spectral coefficients (real and imaginary part), e.g. for trunc=5: n_coeff=54\n\n\n\n\n\n","category":"type"},{"location":"#SpeedyWeatherEmulator.SimDataHandling.SimData-Tuple{SpeedyWeatherEmulator.BasicStructs.SimPara}","page":"Home","title":"SpeedyWeatherEmulator.SimDataHandling.SimData","text":"SimData(sim_para::SimPara)\n\nConvenience Constructor for SimData and vorticity data generation.\n\nCorresponding to the simulation parameters in SimPara, this constructor:     - defines a SpeedyWeather.jl simulation sim     - runs it for different random initial conditions (if there is no other initial condition defined in SimPara)     - stores the vorticity of the actual leap frog step in data, for array details see struct definition\n\nArguments\n\nsim_para::SimPara: Simulation parameters for data generation.\n\nExamples\n\nsim_para = SimPara(trunc=5, n_steps=8, n_ic=1000)\nsim_data = SimData(sim_para)\n\n\n\n\n\n","category":"method"},{"location":"#SpeedyWeatherEmulator.SimDataHandling.create_sim_DIR-Tuple{SpeedyWeatherEmulator.BasicStructs.SimPara}","page":"Home","title":"SpeedyWeatherEmulator.SimDataHandling.create_sim_DIR","text":"create_sim_DIR(;sim_para::SimPara)\n\nCreates a DIR for saving and loading SimulationData according to sim_para.\n\nArguments\n\nsim_para::SimPara: Simulation parameters (key) for the DIR generation.\n\nReturns\n\nfilepath::String: Returns the filepath\n\n\n\n\n\n","category":"method"},{"location":"#SpeedyWeatherEmulator.SimDataHandling.load_sim_data-Tuple{SpeedyWeatherEmulator.BasicStructs.SimPara}","page":"Home","title":"SpeedyWeatherEmulator.SimDataHandling.load_sim_data","text":"load_sim_data(sim_para::SimPara)\n\nLoads existing simulation data from data/simdata/ according to simdata.sim_para.\n\nArguments\n\nsim_para::SimPara: Simulation parameters (key) of the stored simulation data\n\nReturns\n\nSimData: Returns the loaded simulation data\n\nExamples\n\nsim_para = SimPara(trunc=5, n_steps=8, n_ic=1000)\nsim_data = SimData(sim_para)\nsave_sim_data(sim_data)\n...\nsim_data_loaded = load_sim_data(sim_para)\n\n\n\n\n\n","category":"method"},{"location":"#SpeedyWeatherEmulator.SimDataHandling.save_sim_data-Tuple{SpeedyWeatherEmulator.SimDataHandling.SimData}","page":"Home","title":"SpeedyWeatherEmulator.SimDataHandling.save_sim_data","text":"save_sim_data(sim_data::SimData)\n\nSaves simulation data in data/simdata/ according to simdata.sim_para.\n\nArguments\n\nsim_data::SimData: Storaged data and simulation parameters\n\nReturns\n\nnothing\n\nExamples\n\nsim_para = SimPara(trunc=5, n_steps=8, n_ic=1000)\nsim_data = SimData(sim_para)\nsave_sim_data(sim_data)\n\n\n\n\n\n","category":"method"}]
}
